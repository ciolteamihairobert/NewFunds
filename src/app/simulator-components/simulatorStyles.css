.simulator-container {
    display: flex;
    flex-direction: column;
    border-radius: 0.5rem;
    box-shadow: 0 0.25rem 1rem rgba(0, 191, 118, 0.5), 0 0.25rem 1rem rgba(0, 191, 118, 0.5);
    transition: background-color 0.3s ease, transform 0.3s ease;
    padding: 1rem;
    margin-top: 0.5rem;
    margin-bottom: 1rem;
    overflow: hidden;
    height: -webkit-fill-available;
    width: -webkit-fill-available;
}

.simulator-content {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  padding: 0.5rem;
  margin-top: 1rem;
  overflow: auto;
}


.input-section {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    margin: 0.2rem;
    width: 35%;
    min-width: 19.5rem;
}

.output-section {
    display: flex;
    flex-direction: column;
    margin: 0.2rem;
}

.output-section.empty {
    padding-top: 20rem;
}

.small-field {
    height: 5rem;
}

::ng-deep .mat-mdc-form-field {
    border-radius: 0.5rem;
    width: 100%;
}

::ng-deep .mat-mdc-form-field .mdc-text-field--filled {
    --mdc-filled-text-field-container-color: white !important;
}
  
::ng-deep .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {
    background-color: #00bf76 !important;
}

::ng-deep .mat-mdc-form-field.mat-focused .mdc-text-field--focused {
    --mdc-filled-text-field-focus-label-text-color: #00bf76 !important;
    --mdc-filled-text-field-focus-active-indicator-color: #00bf76 !important;
}

::ng-deep .mat-mdc-form-field.mat-focused .mdc-floating-label {
    color: #00bf76 !important;
}

::ng-deep .mdc-text-field--filled:not(.mdc-text-field--disabled):hover {
    background-color: #f5f5f5;
}

@media (max-width: 1430px) {
    .input-section {
        width: fit-content;
        margin-right: 0rem;
        height: 100vh; 
    }
    .output-section {
        width: -webkit-fill-available;
        height: 100vh; 
    }

    .financial-independence-content .input-section{
      height: fit-content;
    }
    
}

@media (min-width: 2450px) {
    .input-section {
        margin-right: 20rem;
    }
}


.output-section table {
    width: 100%;
    border-collapse: collapse;
}

.output-section th, 
.output-section td {
    text-align: center;
    padding: 0.5rem;
}

.output-section th {
    color: #00bf76;
    font-size: 1rem; 
}

.empty-state {
    display: flex;
    flex-direction: column;
    justify-content: center;
    font-size: 1.3rem;
    text-align: center;
    padding-bottom: 10rem;
}

.results-container {
    padding-bottom: 1.5rem;
}

.results {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: 1.2rem;
    font-weight: 500;
    color: #333;
}

.result-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
    border-radius: 0.5rem;
    box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.1);
}

::ng-deep .mat-mdc-snack-bar-container .mdc-snackbar__surface {
    background-color: #546E7A !important;
    text-align: center;
    padding: 0.5rem; 
}

::ng-deep .mat-mdc-snack-bar-label .mdc-snackbar__label {
    color: white  !important;
}

::ng-deep .mat-mdc-snack-bar-container .mdc-snackbar__label {
    font-size: 1rem !important;
}

.modal-button{
  align-self: flex-start; 
  max-width: 600px;
}

.modal-button .mat-mdc-button-base {
  margin: 8px 8px 8px 0;
}

.financial-independence-content{
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  padding: 0.5rem;
  margin-top: 1rem;
  overflow: auto;  
  height: 100vh; 
  box-sizing: border-box;
}

:root {
    --primary:  rgba(0, 191, 118, 0.5);
    --secondary:  #66b3b3;
    --white: #f5f5f5;
    --black: black;
    --accent1: #e9b3c9;    /* Galben cald pentru accente energice */
    --accent2: #e67da7;     /* Roșu coral pentru un contrast mai puternic */
    --accent3: #ADC6EB;
  }
  
  .results-investment-container{
    display: grid;
    grid-template-columns: repeat(2, 1fr);  /* Două coloane */
    gap: 10px;  
  }

  .results-item{
    display: flex;                /* Flexbox activat */
    justify-content: center;      /* Centrează pe orizontală */
    align-items: center;          /* Centrează pe verticală */
    background: var(--secondary);
    padding: 20px;
    border-radius: 0.5rem;      /* Colțuri rotunjite */
    height: 100px;     
  }
  
  .results-item label{
    font-size: 16px;
    font-weight: 400;
  }

  .results-group{
    display: flex;
    flex-direction: column;       /* Aranjează `label` și `h2` pe verticală */
    align-items: center;   
  }

  .results-wrapped{
    display: grid;
    grid-template-columns: repeat(2, 1fr);  /* Două coloane */
    gap: 10px;  
  }

  .table-results{
    background: var(--primary);
    border-radius: 0.5rem; 
    max-width: 100%;
  }

  .concept-container {
    position: relative;               /* Poziționare relativă pentru elementele din interior */
    display: flex;                
    flex-direction: column;                
    background: var(--white);
    padding: 20px;
    border-radius: 0.5rem;        
    margin-top: 2rem;
    color: black;
}

.concept-header {
    position: absolute;             /* Fixare absolută */
    top: 0;                         /* Fixare în partea de sus */
    left: 0;                        
    width: 100%;                    /* Să acopere întreaga lățime */
    height: 60px;                   /* Înălțime fixă */
    text-align: center;             
    padding: 10px 0;                /* Spațiere pe verticală pentru text */
    border-top-left-radius: 0.5rem;   /* Rotunjire margini de sus */
    border-top-right-radius: 0.5rem;                /* Text alb */
    font-weight: bold;
    line-height: 50px;              /* Centrare verticală a textului în header */
    display: flex; 
    align-items: center;
    justify-content: center;
  }

  .concept-header{
    background: var(--primary);
  }

  .concept-header h2{
    margin: 0;
  }

.concept-content {
    padding-top: 60px;              /* Spațiu pentru a preveni suprapunerea conținutului */
    text-align: center;
}

.concept-content-wrapped{
  display: grid;
  grid-template-rows: repeat(4, 1fr);  
  gap: 10px;  
}

.concept-content-item{
  display: flex;                
    justify-content: center;      
    align-items: center;          
    background: var(--primary);  
    padding: 6px;
    border-radius: 0.5rem;     
    height: 100%;
    width: 100%;
}

.concept-content-group{
  display: flex;
  flex-direction: column;      
  align-items: center;  
  height: fit-content;
  justify-content: center;
}

.concept-content-group h3{
  margin: 0;
}

.input-financial-independence {
  background: var(--secondary);
  margin-top: 2rem;
  display: flex;
  flex-direction: column;  /* Stack pe verticală */
  align-items: center;    /* Centrare pe orizontală */
  justify-content: center; /* Centrare pe verticală, dacă e necesar */
  padding: 20px;
  border-radius: 0.5rem;
}

.input-financial-independence .input-section{
  width:40%;
}


/**/

/* organogram  */
.organogram{
  --grid-gap: 1rem; 
  display: grid;
  gap: var(--grid-gap);
  color: black;
  font-weight: 500;
  margin-bottom: 2rem;
}

.organogram>div{ 
  display: grid; 
  justify-content: start;
  align-items: center;
  position: relative;
}

.organogram>div>span{
  padding-block: 0.5rem;
  padding-inline: 1rem;
  border-radius: 0.5rem;
  background: linear-gradient(to right, var(--accent1), var(--accent2)); 
}
.organogram>.main>span{
  aspect-ratio: 1;
  border-radius: 50%;
  display: grid;
  place-items: center;
}

.organogram>.main.cc>span
{
  background: var(--secondary);
}

.organogram>.sub{
  padding-inline-start: calc(var(--grid-gap) * 2);
}
/* lines */
.organogram>.sub::after{
  content: "";
  position: absolute;
  z-index: -1;
  width: calc(var(--grid-gap) * 2);
  height: calc(100% + var(--grid-gap));
  
  /* position */
  inset-block-start: auto;
  inset-inline-end: auto;
  inset-block-end: 50%;
  inset-inline-start: var(--grid-gap);
  
  /* border */
  --borderW: 2px;
  --borderR: 0.5rem;
  border-style: dashed;
  border-color: var(--accent2);
  
  /* border-width */
  border-block-start-width: 0;
  border-inline-end-width: 0;
  border-block-end-width: var(--borderW);
  border-inline-start-width: var(--borderW);
 
  /* border-radius */
  border-end-start-radius: var(--borderR);
}

@media (min-width: 30rem){
  
  .organogram{
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: 'tl tc tr' 'cl cc cr' 'bl bc br';
    text-align: center;
  }
  .organogram>div{
    grid-area: var(--area);
    justify-content: center;
  }
  
  .organogram>.sub{ padding-inline-start: unset }
  .organogram>.sub>span { 
    padding-block: 1rem; 
    padding-inline: 2rem;
    border-radius: 1rem;
  }
  
  /* set up       |grid-area | position after element  |     border-width      | border-radius */       
  .organogram>.tl {--area: tl; --i-bs: 50%; --i-is: 50%; --bw-be: 1; --bw-is: 1; --br-es: 1}
  .organogram>.tc {--area: tc; --i-bs: 50%; --i-is: 50%; --bw-is: 1}
  .organogram>.tr {--area: tr; --i-bs: 50%; --i-ie: 50%; --bw-be: 1; --bw-ie: 1; --br-ee: 1}
  .organogram>.cl {--area: cl; --i-bs: 50%; --i-is: 50%; --bw-bs: 1}
  .organogram>.cc {--area: cc}
  .organogram>.cr {--area: cr; --i-bs: 50%; --i-ie: 50%; --bw-bs: 1}
  .organogram>.bl {--area: bl; --i-be: 50%; --i-is: 50%; --bw-bs: 1; --bw-is: 1; --br-ss: 1}
  .organogram>.bc {--area: bc; --i-be: 50%; --i-is: 50%; --bw-is: 1}
  .organogram>.br {--area: br; --i-be: 50%; --i-ie: 50%; --bw-bs: 1; --bw-ie: 1; --br-se: 1}
  
  .organogram>.sub::after{
    width: 100%;
    height: calc(50% + var(--grid-gap) * 1.5);
   
    /* position */
    inset-block-start: var(--i-bs, auto);
    inset-inline-end: var(--i-ie, auto);
    inset-block-end: bar(--i-be, auto);
    inset-inline-start: var(--i-is, auto);
    
    /* border-width*/
    border-block-start-width: calc(var(--borderW) * var(--bw-bs, 0));
    border-inline-end-width: calc(var(--borderW) * var(--bw-ie, 0));
    border-block-end-width: calc(var(--borderW) * var(--bw-be, 0));
    border-inline-start-width: calc(var(--borderW) * var(--bw-is, 0));
    
    /* border-radius */
    border-start-start-radius: calc(var(--borderR) * var(--br-ss, 0));
    border-start-end-radius: calc(var(--borderR) * var(--br-se, 0));
    border-end-end-radius: calc(var(--borderR) * var(--br-ee, 0));
    border-end-start-radius: calc(var(--borderR) * var(--br-es, 0));
  }

}

